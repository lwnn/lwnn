from building import *
Import('asenv')

cwd = GetCurrentDir()

objs = []
objs += Glob('layers/*.c')
objs += Glob('runtime/*.c')
objs += Glob('runtime/cpu/*.c')
objs += Glob('runtime/cpu/*/*.c')
objs += Glob('runtime/opencl/*.c')
objs += Glob('runtime/common/*.c')
objs += Glob('runtime/common/ssd/*.cpp')
objs += Glob('runtime/common/image/*.cpp')
objs += Glob('runtime/common/yolo/*.c')
objs += Glob('*.c')

INCD = ['','layers','runtime','runtime/cpu','runtime/opencl','runtime/common',
        'runtime/common/ssd','runtime/common/yolo']
asenv.Append(CPPPATH=['%s/%s'%(cwd,d) for d in INCD])

if(os.getenv('DISABLE_OPENCL') != 'True'):
    if(IsPlatformWindows()):
        asenv.AppendENVPath('PATH', os.getenv('PATH'))
        cuda = os.getenv('CUDA_PATH')
        asenv.Append(CPPPATH=['%s/include'%(cuda)])

for rt in ['OPENCL', 'CPU_S8', 'CPU_Q8', 'CPU_Q16', 'CPU_FLOAT']:
    if(os.getenv('DISABLE_%s'%(rt)) == 'True'):
        asenv.Append(CPPDEFINES=['DISABLE_RUNTIME_%s'%(rt)])

for dir in Glob('runtime/*'):
    sf = '%s/SConscript'%(dir)
    if(os.path.isfile('%s/%s'%(cwd,sf))):
        objs += SConscript(sf)

objs = asenv.Library('lwnn', objs)
if(os.getenv('DISABLE_OPENCL') != 'True'):
    if(GetOption('android')):
        libocl = Package('https://github.com/krrishnarraj/libopencl-stub.git')
        asenv.Append(CPPPATH=['%s/include'%(libocl)])
        objs += Glob('%s/src/*.c'%(libocl))
    elif(IsPlatformWindows()):
        objs+=['%s/lib/x64/OpenCL.lib'%(cuda)]
    else:
        asenv.Append(LIBS=['OpenCL'])
objs += SConscript('third_party/SConscript')

Return('objs')
