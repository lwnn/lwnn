from building import *
Import('asenv')

objs = []

TFDIR = os.getenv('TFDIR')

if(TFDIR != None):
    cwd = GetCurrentDir()
    MKSymlink('%s/tensorflow/lite'%(TFDIR), '%s/tflite'%(cwd))
    cmsis = Package('https://github.com/lwnn/CMSIS_5.git')
    FB = Package('https://github.com/google/flatbuffers.git', version='v1.12.0', todir=cwd)
    GM = Package('https://github.com/google/gemmlowp.git', todir=cwd)
    RUY = Package('https://github.com/google/ruy.git', todir=cwd)
    robjs = Glob('tflite/c/*.c')
    robjs += Glob('tflite/c/*.cc')
    robjs += Glob('tflite/core/api/*.cc')
    robjs += Glob('tflite/micro/memory_planner/*.cc')
    robjs += Glob('tflite/kernels/internal/quantization_util.cc')
    robjs += Glob('tflite/kernels/kernel_util.cc')
    robjs += Glob('tflite/micro/*.cc')
    robjs += Glob('tflite/micro/kernels/*.cc')
    robjs += Glob('tflite/micro/kernels/cmsis-nn/*.cc')
    for obj in robjs:
        if('test' not in obj.rstr()):
            objs.append(obj)
    MKSymlink(cmsis, '%s/cmsis'%(cwd))
    asenv.Append(CPPPATH=[TFDIR, '%s/include'%(FB), GM, RUY, cwd])
    if(GetOption('android')):
        asenv.Append(CPPDEFINES=['GEMMLOWP_NEON'])
    else:
        asenv.Append(CPPDEFINES=['GEMMLOWP_AVX2'])
    asenv.Append(CPPDEFINES=['ENABLE_TFLITE'])
    objs = asenv.Library('tflite', objs)

Return('objs')
